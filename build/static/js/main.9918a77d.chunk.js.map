{"version":3,"sources":["components/Home.js","features/userSlice.js","firebase.js","components/Quora/auth/Login.js","features/questionSlice.js","components/Quora/Post.js","components/Quora/Feed.js","components/Quora/QuoraNavbar.js","components/Quora/SideBarOptions.js","components/Quora/Sidebar.js","components/Quora/Quora.js","components/Quora/QuoraMain.js","components/SpiCpi.js","components/Quora/savedPost.js","App.js","app/store.js","index.js"],"names":["Home","userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","GoogleAuthProvider","db","firestore","Login","useState","email","setEmail","password","setPassword","className","src","alt","style","color","fontSize","onClick","signInWithPopup","catch","err","alert","cursor","value","onChange","e","target","type","placeholder","preventDefault","signInWithEmailAndPassword","then","console","log","createUserWithEmailAndPassword","questionSlice","questionId","questionName","setQuestionInfo","selectQuestionId","question","customStyle","overlay","width","height","backgroundColor","zIndex","content","top","left","right","bottom","marginRight","transform","Post","Id","imageUrl","timestamp","users","upVote","downVote","showMyPost","useSelector","dispatch","useDispatch","IsmodalOpen","setIsModalOpen","answer","setAnswer","getAnswers","setGetAnswers","upvote","setUpvote","downvote","setDownvote","upButtonClicked","setUpButtonClicked","downButtonClicked","setDownButtonClicked","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","answers","data","Avatar","photo","displayName","Date","toDate","toLocaleString","isOpen","onRequestClose","shouldCloseOnOverlayClick","add","FieldValue","serverTimestamp","position","paddingBottom","display","update","currArr","get","savedPost","error","push","delete","Feed","tag","university","handleTag","showSaved","posts","setPosts","dummyPosts","setDummyPosts","checkArray","newPosts","updatedPost","post","uid","questions","u","tags","i","length","checkTag","univComp","require","config","Modal","setAppElement","QuoraNavbar","handleUniversity","handleMyPost","handleSavedPost","openModal","setOpenModal","input","setInput","inputUrl","setInputUrl","imageSelected","setImageSelected","setTags","inputUniv","setInputUniv","handleTags","arr","flag","splice","history","useHistory","onKeyDown","event","key","signOut","Button","required","accept","files","class","for","disabled","formData","FormData","append","axios","res","secure_url","topics","category","imgSrc","SideBarOptions","topic","toUpperCase","slice","Sidebar","Quora","setTag","setUniversity","setShowSaved","setShowMyPost","currTag","univ","QuoraMain","onAuthStateChanged","authUser","photoURL","SpiCpi","SavedPost","App","exact","path","store","configureStore","reducer","userReducer","questionReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9918a77d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Home() {\r\n    return <div>hello from home</div>;\r\n}\r\n\r\nexport default Home;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        user: null,\r\n    },\r\n    // The `reducers` field lets us define reducers and generate associated actions\r\n    reducers: {\r\n        login: (state, action) => {\r\n            state.user = action.payload;\r\n        },\r\n        logout: (state, action) => {\r\n            state.user = null;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = state => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import firebase from 'firebase';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n/* const firebaseConfig = {\r\n    apiKey: 'AIzaSyApYAcc5f0PVEZxBWUNKcZ4DNqqqVO9twA',\r\n    authDomain: 'quora-d3ebb.firebaseapp.com',\r\n    projectId: 'quora-d3ebb',\r\n    storageBucket: 'quora-d3ebb.appspot.com',\r\n    messagingSenderId: '153712168448',\r\n    appId: '1:153712168448:web:2178d3fb0226b1d6ab52e5',\r\n    measurementId: 'G-V9LSBSCKW4',\r\n}; */\r\n\r\nconst firebaseConfig = {\r\n    apiKey: 'AIzaSyAou3TEV2CB4GtCvsP3JQcwIrRDVXIwUxs',\r\n    authDomain: 'studenthelper-945a3.firebaseapp.com',\r\n    projectId: 'studenthelper-945a3',\r\n    storageBucket: 'studenthelper-945a3.appspot.com',\r\n    messagingSenderId: '290774875605',\r\n    appId: '1:290774875605:web:83652dab33301c252a915c',\r\n    measurementId: 'G-GBESPZVWWN',\r\n};\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport { auth, provider };\r\nexport default db;\r\n","import ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport React, { useState } from \"react\";\r\nimport \"../../../css/Login.css\";\r\nimport { auth, provider } from \"../../../firebase\";\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((auth) => {\r\n        console.log(auth);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    setPassword(\"\");\r\n    setEmail(\"\");\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((auth) => {\r\n        if (auth) console.log(auth);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    setPassword(\"\");\r\n    setEmail(\"\");\r\n  };\r\n\r\n  const signIn = () => {\r\n    auth.signInWithPopup(provider).catch((err) => alert(err));\r\n  };\r\n\r\n  // TODO change facebook logo\r\n  // TODO implement signIn with apple id (will cover both user eco-system)\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__container\">\r\n        <div className=\"login__logo\">\r\n          <img\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Quora_logo_2015.svg/250px-Quora_logo_2015.svg.png\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"login__desc\">\r\n          <p>A Place to Share knowledge and better understand the world</p>\r\n          <p style={{ color: \"royalblue\", fontSize: \"25px\" }}>\r\n            HandCrafted with ❤️ by{\" \"}\r\n          </p>\r\n          <h3>Team CSE</h3>\r\n        </div>\r\n        <div className=\"login__auth\">\r\n          <div className=\"login__authOptions\">\r\n            <div className=\"login__authOption\">\r\n              <img\r\n                className=\"login__googleAuth\"\r\n                src=\"https://media-public.canva.com/MADnBiAubGA/3/screen.svg\"\r\n                alt=\"\"\r\n              />\r\n              <p onClick={signIn}>Continue With Google</p>\r\n            </div>\r\n            <div className=\"login__authOption\">\r\n              <img\r\n                className=\"login__googleAuth\"\r\n                src=\"https://1000logos.net/wp-content/uploads/2016/11/Facebook-logo-500x350.png\"\r\n                alt=\"\"\r\n              />\r\n              <span>Continue With Facebook</span>\r\n            </div>\r\n            <div className=\"login__authDesc\">\r\n              <p>\r\n                <span style={{ color: \"blue\", cursor: \"pointer\" }}>\r\n                  Sign Up With Email\r\n                </span>\r\n                . By continuing you indicate that you have read and agree to\r\n                Quora's\r\n                <span style={{ color: \"blue\", cursor: \"pointer\" }}>\r\n                  Terms of Service{\" \"}\r\n                </span>\r\n                and{\" \"}\r\n                <span style={{ color: \"blue\", cursor: \"pointer\" }}>\r\n                  Privacy Policy\r\n                </span>\r\n                .\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"login__emailPass\">\r\n            <div className=\"login__label\">\r\n              <h4>Login</h4>\r\n            </div>\r\n            <div className=\"login__inputFields\">\r\n              <div className=\"login__inputField\">\r\n                <input\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                />\r\n              </div>\r\n              <div className=\"login__inputField\">\r\n                <input\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"login__forgButt\">\r\n              <small>Forgot Password?</small>\r\n              <button type=\"submit\" onClick={handleLogin}>\r\n                Login\r\n              </button>\r\n            </div>\r\n            <button type=\"submit\" onClick={handleRegister}>\r\n              Register\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"login__lang\">\r\n          <p>हिन्दी</p>\r\n          <ArrowForwardIosIcon fontSize=\"small\" />\r\n        </div>\r\n        <div className=\"login__footer\">\r\n          <p>About</p>\r\n          <p>Languages</p>\r\n          <p>Careers</p>\r\n          <p>Businesses</p>\r\n          <p>Privacy</p>\r\n          <p>Terms</p>\r\n          <p>Contact</p>\r\n          <p>&copy; Quora Inc. 2021</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const questionSlice = createSlice({\r\n    name: 'question',\r\n    initialState: {\r\n        questionId: null,\r\n        questionName: null,\r\n    },\r\n    reducers: {\r\n        setQuestionInfo: (state, action) => {\r\n            state.questionId = action.payload.questionId;\r\n            state.questionName = action.payload.questionName;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setQuestionInfo } = questionSlice.actions;\r\n\r\nexport const selectQuestionId = state => state.question.questionId;\r\nexport const selectQuestionName = state => state.question.questionName;\r\n\r\nexport default questionSlice.reducer;\r\n","import { Avatar } from '@material-ui/core';\r\nimport { MoreHorizOutlined } from '@material-ui/icons';\r\nimport ArrowDownwardOutlinedIcon from '@material-ui/icons/ArrowDownwardOutlined';\r\nimport ArrowUpwardOutlinedIcon from '@material-ui/icons/ArrowUpwardOutlined';\r\n// import ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport firebase from 'firebase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport '../../css/Quora/Post.css';\r\nimport {\r\n    selectQuestionId,\r\n    setQuestionInfo,\r\n} from '../../features/questionSlice';\r\nimport { selectUser } from '../../features/userSlice';\r\nimport db from '../../firebase';\r\n\r\nconst customStyle = {\r\n    overlay: {\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'rgba(0,0,0,0.8)',\r\n        zIndex: '1000',\r\n    },\r\n    content: {\r\n        height: '45%',\r\n        width: '40%',\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nfunction Post({\r\n    Id,\r\n    question,\r\n    imageUrl,\r\n    timestamp,\r\n    users,\r\n    upVote,\r\n    downVote,\r\n    showMyPost,\r\n}) {\r\n    const user = useSelector(selectUser);\r\n    // console.log(user);\r\n    const dispatch = useDispatch();\r\n\r\n    const [IsmodalOpen, setIsModalOpen] = useState(false);\r\n    const questionId = useSelector(selectQuestionId);\r\n    const [answer, setAnswer] = useState('');\r\n    const [getAnswers, setGetAnswers] = useState([]);\r\n    const [upvote, setUpvote] = useState(upVote);\r\n    const [downvote, setDownvote] = useState(downVote);\r\n    const [upButtonClicked, setUpButtonClicked] = useState(false);\r\n    const [downButtonClicked, setDownButtonClicked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (questionId) {\r\n            db.collection('questions')\r\n                .doc(questionId)\r\n                .collection('answer')\r\n                .orderBy('timestamp', 'desc')\r\n                .onSnapshot(snapshot =>\r\n                    setGetAnswers(\r\n                        snapshot.docs.map(doc => ({\r\n                            id: doc.id,\r\n                            answers: doc.data(),\r\n                        }))\r\n                    )\r\n                );\r\n        }\r\n    }, [questionId]);\r\n\r\n    const handleAnswer = e => {\r\n        e.preventDefault();\r\n\r\n        if (questionId) {\r\n            db.collection('questions')\r\n                .doc(questionId)\r\n                .collection('answer')\r\n                .add({\r\n                    user: user,\r\n                    answer: answer,\r\n                    questionId: questionId,\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                });\r\n        }\r\n        setAnswer('');\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    const handleUpVote = () => {\r\n        if (!upButtonClicked) {\r\n            if (downButtonClicked) {\r\n                setDownvote(downvote - 1);\r\n                db.collection('questions').doc(Id).update({\r\n                    downVote: downvote,\r\n                });\r\n                setDownButtonClicked(false);\r\n            }\r\n            setUpvote(upvote + 1);\r\n            db.collection('questions')\r\n                .doc(Id)\r\n                .update({\r\n                    upVote: upvote + 1,\r\n                });\r\n            setUpButtonClicked(true);\r\n        }\r\n    };\r\n\r\n    const handleDownVote = () => {\r\n        if (!downButtonClicked) {\r\n            if (upButtonClicked) {\r\n                setUpvote(upvote - 1);\r\n                db.collection('questions')\r\n                    .doc(Id)\r\n                    .update({\r\n                        upVote: upvote - 1,\r\n                    });\r\n                setUpButtonClicked(false);\r\n            }\r\n            setDownvote(downvote + 1);\r\n            db.collection('questions')\r\n                .doc(Id)\r\n                .update({\r\n                    downVote: downvote + 1,\r\n                });\r\n            setDownButtonClicked(true);\r\n        }\r\n    };\r\n\r\n    const handleSave = e => {\r\n        e.preventDefault();\r\n\r\n        let currArr = [];\r\n\r\n        console.log('handling save');\r\n\r\n        db.collection('questions')\r\n            .doc(Id)\r\n            .get()\r\n            .then(doc => {\r\n                currArr = doc.data().savedPost;\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n\r\n        currArr.push(user);\r\n\r\n        db.collection('questions').doc(Id).update({\r\n            savedPost: currArr,\r\n        });\r\n    };\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault();\r\n\r\n        console.log(typeof questionId, questionId === null);\r\n\r\n        if (questionId) {\r\n            db.collection('questions')\r\n                .doc(questionId)\r\n                .delete()\r\n                .then(() => {\r\n                    console.log('finally deleted');\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n\r\n        console.log('deleted!!!');\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"post\"\r\n            onClick={() =>\r\n                dispatch(\r\n                    setQuestionInfo({\r\n                        questionId: Id,\r\n                        questionName: question,\r\n                    })\r\n                )\r\n            }\r\n        >\r\n            <div className=\"post__info\">\r\n                <Avatar\r\n                    src={\r\n                        users.photo\r\n                            ? users.photo\r\n                            : 'https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573'\r\n                    }\r\n                />\r\n                <h4>{users.displayName ? users.displayName : users.email}</h4>\r\n                <small>{new Date(timestamp?.toDate()).toLocaleString()}</small>\r\n            </div>\r\n            <hr />\r\n            <div className=\"post__body\">\r\n                <div className=\"post__question\">\r\n                    <p>{question}</p>\r\n\r\n                    <Modal\r\n                        isOpen={IsmodalOpen}\r\n                        onRequestClose={() => setIsModalOpen(false)}\r\n                        shouldCloseOnOverlayClick={false}\r\n                        style={customStyle}\r\n                    >\r\n                        <div className=\"modal__question\">\r\n                            <h1>{question}</h1>\r\n                            <p>\r\n                                asked by{' '}\r\n                                <span className=\"name\">\r\n                                    {users.displayName\r\n                                        ? users.displayName\r\n                                        : users.email}\r\n                                </span>{' '}\r\n                                {''}\r\n                                on{' '}\r\n                                <span className=\"name\">\r\n                                    {new Date(\r\n                                        timestamp?.toDate()\r\n                                    ).toLocaleString()}\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"modal__answer\">\r\n                            <textarea\r\n                                value={answer}\r\n                                onChange={e => setAnswer(e.target.value)}\r\n                                placeholder=\"Enter Your Answer\"\r\n                                type=\"text\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"modal__button\">\r\n                            <button\r\n                                className=\"cancle\"\r\n                                onClick={() => setIsModalOpen(false)}\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                            <button\r\n                                type=\"sumbit\"\r\n                                onClick={handleAnswer}\r\n                                className=\"add\"\r\n                            >\r\n                                Add Answer\r\n                            </button>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n\r\n                {imageUrl && (\r\n                    <img\r\n                        src={imageUrl}\r\n                        alt=\"QuestionImage was not added while posting the question\"\r\n                    />\r\n                )}\r\n                <div className=\"border__bottom\" />\r\n                <div className=\"post__answer\">\r\n                    <button\r\n                        onClick={() => setIsModalOpen(true)}\r\n                        className=\"post__btnAnswer\"\r\n                    >\r\n                        Answer\r\n                    </button>\r\n\r\n                    {getAnswers.map(({ id, answers }) => (\r\n                        <span key={id}>\r\n                            <p\r\n                                key={id}\r\n                                style={{\r\n                                    position: 'relative',\r\n                                    paddingBottom: '5px',\r\n                                }}\r\n                            >\r\n                                {Id === answers.questionId ? (\r\n                                    <span>\r\n                                        {answers.answer}\r\n                                        <br />\r\n                                        <span\r\n                                            style={{\r\n                                                position: 'absolute',\r\n                                                color: 'gray',\r\n                                                fontSize: 'small',\r\n                                                display: 'flex',\r\n                                                right: '0px',\r\n                                            }}\r\n                                        >\r\n                                            <span style={{ color: '#b92b27' }}>\r\n                                                {answers.user.displayName\r\n                                                    ? answers.user.displayName\r\n                                                    : answers.user.email}{' '}\r\n                                                on{' '}\r\n                                                {new Date(\r\n                                                    answers.timestamp?.toDate()\r\n                                                ).toLocaleString()}\r\n                                            </span>\r\n                                        </span>\r\n                                    </span>\r\n                                ) : (\r\n                                    ''\r\n                                )}\r\n                            </p>\r\n                        </span>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"post__footer\">\r\n                <div className=\"post__footerAction\">\r\n                    <button className=\"upwardArrow\" onClick={handleUpVote}>\r\n                        <ArrowUpwardOutlinedIcon />\r\n                        <span>{upvote}</span>\r\n                    </button>\r\n                    <button className=\"downwardArrow\" onClick={handleDownVote}>\r\n                        <ArrowDownwardOutlinedIcon />\r\n                        <span>{downvote}</span>\r\n                    </button>\r\n                </div>\r\n                <button onClick={handleSave}>save post</button>\r\n                {showMyPost && <button onClick={handleDelete}>delete</button>}\r\n\r\n                {/* <RepeatOutlinedIcon /> */}\r\n\r\n                {/* <ChatBubbleOutlineOutlinedIcon /> */}\r\n\r\n                <div className=\"post__footerLeft\">\r\n                    {/* <ShareOutlined /> */}\r\n                    {/* <MoreHorizOutlined /> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport '../../css/Quora/Feed.css';\r\nimport { selectUser } from '../../features/userSlice';\r\nimport db from '../../firebase';\r\nimport Post from './Post';\r\n\r\nfunction Feed({ tag, university, handleTag, showSaved, showMyPost }) {\r\n    const user = useSelector(selectUser);\r\n    // let tempTag = tag;\r\n    const [posts, setPosts] = useState([]);\r\n    const [dummyPosts, setDummyPosts] = useState([]);\r\n\r\n    const checkTag = tags => {\r\n        for (let i = 0; i < tags.length; i++) {\r\n            let currTag = tags[i];\r\n            if (currTag === tag) {\r\n                // console.log(currTag, tag);\r\n                return true;\r\n            }\r\n            // else console.log('------ unused -------', currTag);\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const checkUniv = univ => {\r\n        return univ === university;\r\n    };\r\n\r\n    const checkArray = newPosts => {\r\n        let updatedPost = [];\r\n\r\n        if (tag === 'all' && university === '' && showMyPost) {\r\n            // eslint-disable-next-line array-callback-return\r\n            // console.log(tag, university, showMyPost);\r\n            newPosts.map(post => {\r\n                console.log(user.uid);\r\n                console.log(post.questions.user.uid);\r\n                // console.log(post.question.user.uid);\r\n                if (user.uid === post.questions.user.uid) {\r\n                    console.log('hello');\r\n                    updatedPost.push(post);\r\n                }\r\n            });\r\n        } else if (tag === 'all' && university === '' && showSaved) {\r\n            // eslint-disable-next-line array-callback-return\r\n            newPosts.map(post => {\r\n                let currUsers = post.questions.savedPost;\r\n                // eslint-disable-next-line array-callback-return\r\n                currUsers.map(u => {\r\n                    if (u.uid === user.uid) {\r\n                        updatedPost.push(post);\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            // eslint-disable-next-line array-callback-return\r\n            newPosts.map(post => {\r\n                if (\r\n                    (tag === '' ||\r\n                        tag === 'all' ||\r\n                        checkTag(post.questions.tags)) &&\r\n                    (university === '' || checkUniv(post.questions.univComp))\r\n                ) {\r\n                    updatedPost.push(post);\r\n                }\r\n            });\r\n        }\r\n        return updatedPost;\r\n    };\r\n\r\n    useEffect(() => {\r\n        // console.log(typeof tag, tag, tag === '');\r\n        db.collection('questions')\r\n            .orderBy('timestamp', 'desc')\r\n            .onSnapshot(snapshot => {\r\n                // console.log('Sanpshot');\r\n                setPosts(\r\n                    snapshot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        questions: doc.data(),\r\n                    }))\r\n                );\r\n                if (tag === '') {\r\n                    handleTag('all');\r\n                }\r\n            });\r\n        // console.log(posts);\r\n        if (tag !== '') {\r\n            setDummyPosts(checkArray(posts));\r\n\r\n            // console.log('hello');\r\n        } else setDummyPosts(posts);\r\n        // console.log(showSaved);\r\n\r\n        // console.log('HIIIiiii');\r\n    }, [showMyPost, showSaved, tag, university]);\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            {/* <QuoraBox /> */}\r\n            {dummyPosts.map(({ id, questions }) => (\r\n                <Post\r\n                    key={id}\r\n                    Id={id}\r\n                    question={questions.question}\r\n                    imageUrl={questions.imageUrl}\r\n                    timestamp={questions.timestamp}\r\n                    users={questions.user}\r\n                    upVote={questions.upVote}\r\n                    downVote={questions.downVote}\r\n                    showMyPost={showMyPost}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Feed;\r\n","import { Avatar, Button } from \"@material-ui/core\";\r\nimport BookmarksIcon from \"@material-ui/icons/Bookmarks\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n// import LanguageIcon from '@material-ui/icons/Language';\r\nimport NotificationsOutlinedIcon from \"@material-ui/icons/NotificationsOutlined\";\r\nimport PeopleAltOutlinedIcon from \"@material-ui/icons/PeopleAltOutlined\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport axios from \"axios\";\r\nimport firebase from \"firebase\";\r\nimport React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../../css/Quora/QuoraNavbar.css\";\r\nimport { selectUser } from \"../../features/userSlice\";\r\nimport db, { auth } from \"../../firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nrequire(\"dotenv\").config();\r\n// const cloudinary = require('cloudinary').v2;\r\n// console.log(cloudinary.config().cloud_name);\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction QuoraNavbar({ handleUniversity, handleSavedPost, handleMyPost }) {\r\n  const user = useSelector(selectUser);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [input, setInput] = useState(\"\");\r\n  const [inputUrl, setInputUrl] = useState(\"\");\r\n  const [imageSelected, setImageSelected] = useState(\"\");\r\n  const [tags, setTags] = useState([]);\r\n  const [inputUniv, setInputUniv] = useState(\"\");\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleUniversity(event.target.value);\r\n      event.target.value = \"\";\r\n    }\r\n  };\r\n\r\n  const questionName = input;\r\n  const handleQuestion = (e) => {\r\n    console.log(tags);\r\n    e.preventDefault();\r\n    setOpenModal(false);\r\n\r\n    if (inputUrl === \"\" && imageSelected !== \"\") {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", imageSelected);\r\n      formData.append(\"upload_preset\", \"without_signed\");\r\n\r\n      axios\r\n        .post(\"https://api.cloudinary.com/v1_1/shiva3/image/upload\", formData)\r\n        .then((res) => {\r\n          if (questionName) {\r\n            db.collection(\"questions\").add({\r\n              user: user,\r\n              question: input,\r\n              imageUrl: res.data.secure_url,\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n              upVote: 0,\r\n              downVote: 0,\r\n              tags: tags,\r\n              univComp: inputUniv,\r\n              savedPost: [],\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      if (questionName) {\r\n        db.collection(\"questions\").add({\r\n          user: user,\r\n          question: input,\r\n          imageUrl: inputUrl,\r\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          upVote: 0,\r\n          downVote: 0,\r\n          tags: tags,\r\n          univComp: inputUniv,\r\n          savedPost: [],\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const customStyle = {\r\n    overlay: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      backgroundColor: \"rgba(0,0,0,0.8)\",\r\n      zIndex: \"1000\",\r\n    },\r\n    content: {\r\n      height: \"65%\",\r\n      width: \"50%\",\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      right: \"auto\",\r\n      bottom: \"auto\",\r\n      marginRight: \"-50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n    },\r\n  };\r\n\r\n  const addQuestionNavbar = () => {\r\n    setOpenModal(true);\r\n    setInput(\"\");\r\n    setInputUrl(\"\");\r\n    setImageSelected(\"\");\r\n    setTags([\"all\"]);\r\n    setInputUniv(\"\");\r\n  };\r\n\r\n  const handleTags = (tag) => {\r\n    let arr = tags;\r\n    let flag = true;\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (arr[i] === tag) {\r\n        arr.splice(i, 1);\r\n        i--;\r\n        flag = false;\r\n      }\r\n    }\r\n\r\n    if (flag) arr.push(tag);\r\n\r\n    setTags(arr);\r\n    // console.log(arr);\r\n  };\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"qHeader\">\r\n      <div className=\"qHeader__logo\">\r\n        <img src=\"quoraNavbarLogo.png\" alt=\"quora logo\" />\r\n      </div>\r\n      <div className=\"qHeader__icons\">\r\n        <div className=\"qHeader__icon\">\r\n          <HomeIcon />\r\n        </div>\r\n        {/* <div className=\"qHeader__icon\">\r\n                    <PeopleAltOutlinedIcon />\r\n                </div> */}\r\n        {/* <div className=\"qHeader__icon\">\r\n                    <NotificationsOutlinedIcon />\r\n                </div> */}\r\n\r\n        <div\r\n          onClick={() => {\r\n            history.push(\"/quoramain/savedPost\");\r\n          }}\r\n          className=\"qHeader__icon\"\r\n        >\r\n          <BookmarksIcon />\r\n        </div>\r\n        <div onClick={handleMyPost} className=\"qHeader__icon\">\r\n          <EditIcon />\r\n        </div>\r\n      </div>\r\n      <div className=\"qHeader__input\">\r\n        <SearchIcon />\r\n        <input type=\"text\" placeholder=\"Search Quora\" />\r\n      </div>\r\n      <div className=\"qHeader__input\">\r\n        <SearchIcon />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by University\"\r\n          onKeyDown={handleKeyDown}\r\n        />\r\n      </div>\r\n      <div className=\"qHeader__Rem\">\r\n        <div className=\"qHeader__avatar\">\r\n          <Avatar\r\n            onClick={() => auth.signOut()}\r\n            className=\"Avatar\"\r\n            src={\r\n              user.photo\r\n                ? user.photo\r\n                : \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\"\r\n            }\r\n          />\r\n        </div>\r\n        {/* <LanguageIcon /> */}\r\n        <Button onClick={addQuestionNavbar}>Add Question</Button>\r\n\r\n        {/* modal starts here */}\r\n        <Modal\r\n          isOpen={openModal}\r\n          onRequestClose={() => setOpenModal(false)}\r\n          shouldCloseOnOverlayClick={true}\r\n          style={customStyle}\r\n        >\r\n          <div className=\"modal__title\">\r\n            <h5>Add Question</h5>\r\n          </div>\r\n          <div className=\"modal__info\">\r\n            <Avatar\r\n              className=\"avatar\"\r\n              src={\r\n                user.photo\r\n                  ? user.photo\r\n                  : \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\"\r\n              }\r\n            />\r\n            <p>\r\n              Question is being asked by\r\n              <span>{user.displayName ? user.displayName : user.email}</span>\r\n            </p>\r\n          </div>\r\n          <div className=\"modal__Field\">\r\n            <div className=\"modal__fieldQuestion modal__field__component\">\r\n              <span>Question</span>\r\n              <input\r\n                required\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Start your question with 'What', 'How', 'Why', etc. \"\r\n              />\r\n            </div>\r\n            <div className=\"modal__fieldLink modal__field__component\">\r\n              <span>Link</span>\r\n              <input\r\n                value={inputUrl}\r\n                onChange={(e) => setInputUrl(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Optional: inclue a link that gives context\"\r\n              />\r\n            </div>\r\n            <div className=\"modal__fieldUniversity modal__field__component\">\r\n              <span>University</span>\r\n              <input\r\n                required\r\n                value={inputUniv}\r\n                onChange={(e) => setInputUniv(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Please Enter your current University or Company\"\r\n              />\r\n            </div>\r\n            <div className=\"modal__fieldImageUpload modal__field__component\">\r\n              <span>Upload Image</span>\r\n              <input\r\n                type=\"file\"\r\n                id=\"img\"\r\n                name=\"img\"\r\n                accept=\"image/*\"\r\n                // value={imageSelected.name}\r\n                onChange={(e) => setImageSelected(e.target.files[0])}\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"university\"></div> */}\r\n          <div class=\"tag-wrapper\">\r\n            <p>Select appropriate tags</p>\r\n            <div class=\"tag\">\r\n              <input type=\"checkbox\" onClick={() => handleTags(\"placement\")} />\r\n              <label for=\"\">Placement</label>\r\n            </div>\r\n\r\n            <div class=\"tag\">\r\n              <input type=\"checkbox\" onClick={() => handleTags(\"academics\")} />\r\n              <label for=\"\">Academics</label>\r\n            </div>\r\n\r\n            <div class=\"tag\">\r\n              <input type=\"checkbox\" onClick={() => handleTags(\"fest\")} />\r\n              <label for=\"\">Fest</label>\r\n            </div>\r\n\r\n            <div class=\"tag\">\r\n              <input\r\n                type=\"checkbox\"\r\n                onClick={() => handleTags(\"generalInfo\")}\r\n              />\r\n              <label for=\"\">General info</label>\r\n            </div>\r\n\r\n            <div class=\"tag\">\r\n              <input type=\"checkbox\" onClick={() => handleTags(\"admission\")} />\r\n              <label for=\"\">Admission</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal__buttons\">\r\n            <button className=\"cancle\" onClick={() => setOpenModal(false)}>\r\n              Cancel\r\n            </button>\r\n            <button\r\n              disabled={questionName === \"\"}\r\n              type=\"sumbit\"\r\n              onClick={handleQuestion}\r\n              className=\"add\"\r\n            >\r\n              Add Question\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuoraNavbar;\r\n","// import AddIcon from '@material-ui/icons/Add';\r\nimport React from 'react';\r\nimport '../../css/Quora/SideBarOptions.css';\r\n\r\nconst topics = [\r\n    {\r\n        category: 'all',\r\n        // imgSrc: 'https://qphs.fs.quoracdn.net/main-thumb-t-930-100-cbbsbwijdhpyzlpipejvqpiijhhoaday.jpeg',\r\n        // imgSrc: '',\r\n        imgSrc: 'https://i.ytimg.com/vi/nvZCtQAEBoE/maxresdefault.jpg',\r\n    },\r\n    {\r\n        category: 'placement',\r\n        // imgSrc: 'https://qphs.fs.quoracdn.net/main-thumb-t-930-100-cbbsbwijdhpyzlpipejvqpiijhhoaday.jpeg',\r\n        // imgSrc: '',\r\n        imgSrc: 'https://teresas.ac.in/wp-content/uploads/2018/04/placement-services.png',\r\n    },\r\n    {\r\n        category: 'academics',\r\n        // imgSrc: 'https://qphs.fs.quoracdn.net/main-thumb-t-996-100-bfZBQjeEenKKl8fcNY4tVv0FyArtB0Mb.jpeg',\r\n        imgSrc: 'https://thumbs.dreamstime.com/b/academic-academic-apprentice-college-degree-education-educational-institution-establishment-111559495.jpg',\r\n    },\r\n    {\r\n        category: 'admission',\r\n        // imgSrc: 'https://qphs.fs.quoracdn.net/main-thumb-t-2177-100-JiR07D1TQSfeQzRvWXomVaY4Poj2f8Yb.jpeg',\r\n        imgSrc: 'https://cache.careers360.mobi/media/presets/900X562/article_images/2021/6/3/admissioncounselling.jpeg',\r\n    },\r\n    {\r\n        category: 'generalInfo',\r\n        // imgSrc: 'https://qphs.fs.quoracdn.net/main-thumb-t-843-100-W7FzODceTO2aQmp8D7E4rKZ8YgSv21eR.jpeg',\r\n        imgSrc: 'https://www.ttsystem.com/sites/default/files/styles/full_image/public/info_contact.png?itok=O4Wy6NdX',\r\n    },\r\n    {\r\n        category: 'fest',\r\n        // imgSrc: 'https://qphs.fs.quoracdn.net/main-thumb-t-931-100-c8WCPwZ9qPsh5zLGQ5wHh1ddxtc9Cch7.jpeg',\r\n        imgSrc: 'https://whataftercollege.com/wp-content/uploads/2019/03/cover-image-1-1024x535.jpg',\r\n    },\r\n];\r\n\r\nfunction SideBarOptions({ handleTag }) {\r\n    return (\r\n        <div className=\"sidebarOptions\">\r\n            {topics.map(topic => (\r\n                <div\r\n                    key={topic.category}\r\n                    className=\"sidebarOption\"\r\n                    onClick={() => handleTag(topic.category)}\r\n                >\r\n                    <img src={topic.imgSrc} alt=\"\" />\r\n                    <p>\r\n                        {topic.category[0].toUpperCase() +\r\n                            topic.category.slice(1)}\r\n                    </p>\r\n                </div>\r\n            ))}\r\n\r\n            {/* <div className=\"sidebarOption\">\r\n                <AddIcon />\r\n                <p className=\"text\">Discover Spaces</p>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBarOptions;\r\n","import React from 'react';\r\nimport '../../css/Quora/Sidebar.css';\r\nimport SideBarOptions from './SideBarOptions';\r\n\r\nfunction Sidebar({ handleTag }) {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <SideBarOptions handleTag={handleTag} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from 'react';\r\nimport '../../css/Quora/Quora.css';\r\nimport Feed from './Feed';\r\nimport QuoraNavbar from './QuoraNavbar';\r\nimport Sidebar from './Sidebar';\r\n\r\nfunction Quora() {\r\n    const [tag, setTag] = useState('');\r\n    const [university, setUniversity] = useState('');\r\n    const [showSaved, setShowSaved] = useState(false);\r\n    const [showMyPost, setShowMyPost] = useState(false);\r\n\r\n    const handleTag = currTag => {\r\n        setTag(currTag);\r\n        setUniversity('');\r\n        setShowSaved(false);\r\n        setShowMyPost(false);\r\n    };\r\n\r\n    const handleUniversity = univ => {\r\n        setUniversity(univ);\r\n        setTag('all');\r\n        setShowSaved(false);\r\n        setShowMyPost(false);\r\n    };\r\n\r\n    const handleSavedPost = () => {\r\n        setShowSaved(true);\r\n        setTag('all');\r\n        setUniversity('');\r\n        setShowMyPost(false);\r\n    };\r\n\r\n    const handleMyPost = () => {\r\n        console.log(showMyPost);\r\n        setShowMyPost(true);\r\n        setShowSaved(false);\r\n        setUniversity('');\r\n        setTag('all');\r\n    };\r\n\r\n    return (\r\n        <div className=\"quora\">\r\n            <QuoraNavbar\r\n                handleUniversity={handleUniversity}\r\n                handleSavedPost={handleSavedPost}\r\n                handleMyPost={handleMyPost}\r\n            />\r\n            <div className=\"quora__content\">\r\n                <Sidebar handleTag={handleTag} />\r\n                <Feed\r\n                    tag={tag}\r\n                    university={university}\r\n                    handleTag={handleTag}\r\n                    showSaved={showSaved}\r\n                    showMyPost={showMyPost}\r\n                />\r\n                {/* <Widget /> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quora;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login, logout, selectUser } from '../../features/userSlice';\r\nimport { auth } from '../../firebase';\r\nimport Login from './auth/Login';\r\nimport Quora from './Quora';\r\n\r\nfunction QuoraMain() {\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(authUser => {\r\n            if (authUser) {\r\n                dispatch(\r\n                    login({\r\n                        uid: authUser.uid,\r\n                        email: authUser.email,\r\n                        displayName: authUser.displayName,\r\n                        photo: authUser.photoURL,\r\n                    })\r\n                );\r\n                // console.log(authUser);\r\n            } else {\r\n                dispatch(logout());\r\n            }\r\n            // console.log(authUser);\r\n        });\r\n    }, [dispatch]);\r\n\r\n    return <div className=\"App\">{user ? <Quora /> : <Login />}</div>;\r\n}\r\n\r\nexport default QuoraMain;\r\n","import React from 'react';\r\n\r\nfunction SpiCpi() {\r\n    return <div>hello from spicpi</div>;\r\n}\r\n\r\nexport default SpiCpi;\r\n","import React, { useState } from \"react\";\r\nimport \"../../css/Quora/Quora.css\";\r\nimport Feed from \"./Feed\";\r\nimport QuoraNavbar from \"./QuoraNavbar\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nfunction SavedPost() {\r\n  const [tag, setTag] = useState(\"\");\r\n  const [university, setUniversity] = useState(\"\");\r\n  const [showSaved, setShowSaved] = useState(false);\r\n  const [showMyPost, setShowMyPost] = useState(false);\r\n\r\n  const handleTag = (currTag) => {\r\n    setTag(currTag);\r\n    setUniversity(\"\");\r\n    setShowSaved(false);\r\n    setShowMyPost(false);\r\n  };\r\n\r\n  const handleUniversity = (univ) => {\r\n    setUniversity(univ);\r\n    setTag(\"all\");\r\n    setShowSaved(false);\r\n    setShowMyPost(false);\r\n  };\r\n\r\n  const handleSavedPost = () => {\r\n    setShowSaved(true);\r\n    setTag(\"all\");\r\n    setUniversity(\"\");\r\n    setShowMyPost(false);\r\n  };\r\n\r\n  const handleMyPost = () => {\r\n    console.log(showMyPost);\r\n    setShowMyPost(true);\r\n    setShowSaved(false);\r\n    setUniversity(\"\");\r\n    setTag(\"all\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"quora\">\r\n      <QuoraNavbar\r\n        handleUniversity={handleUniversity}\r\n        handleSavedPost={handleSavedPost}\r\n        handleMyPost={handleMyPost}\r\n      />\r\n      <div className=\"quora__content\">\r\n        <Sidebar handleTag={handleTag} />\r\n        <Feed\r\n          tag={tag}\r\n          university={university}\r\n          handleTag={handleTag}\r\n          showSaved={showSaved}\r\n          showMyPost={showMyPost}\r\n        />\r\n        {/* <Widget /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SavedPost;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Book from \"./components/Book/Book\";\r\nimport Home from \"./components/Home\";\r\nimport QuoraMain from \"./components/Quora/QuoraMain\";\r\nimport SpiCpi from \"./components/SpiCpi\";\r\nimport SavedPost from \"./components/Quora/savedPost\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/quoramain\">\r\n          <QuoraMain />\r\n        </Route>\r\n        <Route exact path=\"/quoramain/savedPost\">\r\n          <SavedPost />\r\n        </Route>\r\n        <Route exact path=\"/spicpi\">\r\n          <SpiCpi />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport questionReducer from '../features/questionSlice';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        user: userReducer,\r\n        question: questionReducer,\r\n    },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}